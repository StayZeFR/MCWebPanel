CREATE TABLE IF NOT EXISTS USER (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    USERNAME VARCHAR(30) NOT NULL,
    EMAIL VARCHAR(60) NOT NULL UNIQUE,
    PASSWORD VARCHAR(255) NOT NULL,
    ENABLED TINYINT DEFAULT (1),
    CREATED DATE DEFAULT (strftime('%Y-%m-%d %H-%M', 'now'))
);

CREATE TABLE IF NOT EXISTS PERMISSION (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    NAME VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS USER_PERMISSION (
    ID_USER INTEGER NOT NULL,
    ID_PERM INTEGER NOT NULL,
    FOREIGN KEY(ID_USER) REFERENCES USER(ID),
    FOREIGN KEY(ID_PERM) REFERENCES PERMISSION(ID)
);

CREATE TABLE IF NOT EXISTS SESSION (
    ID_USER PRIMARY KEY,
    TOKEN VARCHAR(255) UNIQUE,
    EXPIRATION_DATE DATE DEFAULT (date('now', '+30 day')),
    FOREIGN KEY(ID_USER) REFERENCES USER(ID)
);

/*CREATE TRIGGER IF NOT EXISTS DELETE_EXPIRED_TOKEN
AFTER INSERT ON SESSION
BEGIN
    DELETE FROM SESSION WHERE EXPIRATION_DATE < date('now');
END;

CREATE TRIGGER IF NOT EXISTS UPDATE_EXPIRED_TOKEN
AFTER UPDATE ON SESSION
BEGIN
    UPDATE SESSION SET EXPIRATION_DATE = datetime('now', '+30 days') WHERE ID_USER = NEW.ID_USER;
END;*/


INSERT OR IGNORE INTO PERMISSION VALUES (1, "*.*");
INSERT OR IGNORE INTO USER (USERNAME, EMAIL, PASSWORD) VALUES ("admin", "admin@exemple", "jGl25bVBBBW96Qi9Te4V37Fnqchz/Eu4qB9vKrRIqRg=");
INSERT OR IGNORE INTO USER_PERMISSION VALUES (1, 1);